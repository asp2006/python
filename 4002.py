# توضیح کلی درباره پارامترهای تابع `print()` در پایتون:
# 
# در پایتون، تابع `print()` برای نمایش اطلاعات و خروجی در کنسول یا ترمینال استفاده می‌شود.
# این تابع به طور پیش‌فرض مقادیر مختلف را با یک فاصله (space) از هم جدا می‌کند و پس از هر چاپ یک خط جدید (انتقال به خط بعد) اضافه می‌شود.
# اما پایتون امکاناتی برای سفارشی‌سازی رفتار `print()` در اختیار شما قرار می‌دهد که می‌توانید با استفاده از پارامترهای مختلف آن‌ها را تغییر دهید.
# 
# پارامترهای مهم تابع `print()` به شرح زیر است:
# 
# 1. پارامتر `sep` (separator):
#    # به طور پیش‌فرض، تابع `print()` مقادیر مختلف را با فاصله از هم جدا می‌کند.
#    # با استفاده از پارامتر `sep` می‌توانید جداکننده‌های مختلفی مانند خط فاصله (`-`)، ویرگول (`','`) و یا هر علامت دیگری انتخاب کنید.
#    # به عنوان مثال، می‌توانید از `sep='-'` استفاده کنید تا بین مقادیر چاپی شما خط فاصله قرار گیرد.
# 
# 2. پارامتر `end`:
#    # این پارامتر مشخص می‌کند که پس از چاپ هر مقدار چه چیزی در انتهای آن چاپ شود.
#    # به طور پیش‌فرض، پس از هر `print()` یک خط جدید به انتهای چاپ اضافه می‌شود.
#    # با تغییر `end`، می‌توانید این رفتار را تغییر داده و به جای یک خط جدید، یک فاصله (`' '`)، یا هیچ چیزی (مثل `end=''`) قرار دهید.
# 
# 3. پارامتر `flush`:
#    # خروجی‌ها در پایتون معمولاً در یک بافر ذخیره می‌شوند و سپس به صورت گروهی نمایش داده می‌شوند.
#    # اگر بخواهید که خروجی فوراً و بلافاصله چاپ شود، می‌توانید از پارامتر `flush=True` استفاده کنید.
#    # این ویژگی برای موقعیت‌هایی که نیاز به چاپ فوری داده‌ها دارید، کاربرد دارد.
# 
# 4. پارامتر `file`:
#    # این پارامتر به شما این امکان را می‌دهد که خروجی `print()` را به یک فایل ارسال کنید به جای چاپ در کنسول.
#    # به عنوان مثال، می‌توانید داده‌ها را در یک فایل متنی ذخیره کنید تا بعداً از آن استفاده کنید.
# 
# کاربردهای رایج:
#    # - استفاده از `sep` برای انتخاب جداکننده‌های دلخواه بین مقادیر، مانند جدا کردن مقادیر با علامت خاص (مثلاً `'-'`).
#    # - استفاده از `end` برای کنترل اینکه پس از چاپ هر مقدار چه چیزی اضافه شود، مانند جلوگیری از ایجاد خط جدید.
#    # - استفاده از `flush` برای اطمینان از اینکه خروجی فوراً به کنسول نمایش داده شود.
#    # - استفاده از `file` برای ذخیره‌سازی داده‌ها در یک فایل به جای نمایش آن‌ها در کنسول.
# 
# این پارامترها به شما این امکان را می‌دهند که رفتار تابع `print()` را متناسب با نیازهای خود سفارشی‌سازی کنید.


# پارامترها

# Objects :
print("hello world 2023")

# Sep :
print("hello", "world", sep="-")

# End :
print("hello,", end="")
print("world")

# flush :
print("immediate Output", flush=True)

# file :
with open('Output.txt', 'w') as f:
    print("Hello, File!", file=f)

name = "Alice"
age = 30
print("Name:", name, " Age:", age)
